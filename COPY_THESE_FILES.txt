=== FILE 1: requirements.txt ===
python-telegram-bot>=20.0
hyperliquid-python-sdk>=0.17.0
websocket-client>=1.8.0

=== FILE 2: render.yaml ===
services:
  - type: background
    name: jwovaultbot
    env: python
    plan: free
    buildCommand: "pip install -r requirements.txt"
    startCommand: "python start_bot.py"
    envVars:
      - key: TELEGRAM_BOT_TOKEN
        value: 8425306929:AAFbVFtjKSnRqNWy3qL91iQ3KpONLHsMWQo
      - key: TELEGRAM_CHAT_ID
        value: 7722351947

=== FILE 3: start_bot.py ===
#!/usr/bin/env python3
"""
JWOvaultbot Launcher
Simple script to start the JWOvaultbot with proper error handling
"""

import os
import sys
import logging
from jwovaultbot import main

def check_environment():
    """Check if required environment variables are set"""
    required_vars = ['TELEGRAM_BOT_TOKEN', 'TELEGRAM_CHAT_ID']
    missing_vars = []
    
    for var in required_vars:
        if not os.getenv(var):
            missing_vars.append(var)
    
    if missing_vars:
        print("‚ùå Missing required environment variables:")
        for var in missing_vars:
            print(f"   ‚Ä¢ {var}")
        print("\nüí° Set them using:")
        for var in missing_vars:
            print(f"   export {var}='your_value_here'")
        return False
    
    return True

def main_launcher():
    """Main launcher with error handling"""
    print("ü§ñ JWOvaultbot Launcher")
    print("=" * 30)
    
    # Check environment
    if not check_environment():
        sys.exit(1)
    
    # Check Azure connection (optional)
    azure_conn = os.getenv('AZURE_SQL_CONNECTION')
    if azure_conn:
        print("üü¢ Azure SQL connection detected")
    else:
        print("üü° Using local SQLite database")
    
    print("‚úÖ Environment check passed")
    print("üöÄ Starting JWOvaultbot...\n")
    
    try:
        # Start the bot
        main()
    except KeyboardInterrupt:
        print("\nüëã JWOvaultbot shutdown by user")
    except Exception as e:
        print(f"\n‚ùå JWOvaultbot crashed: {e}")
        logging.exception("Bot crashed with exception")

if __name__ == "__main__":
    main_launcher()